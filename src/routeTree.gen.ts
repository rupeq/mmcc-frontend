/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as SignupIndexRouteImport } from './routes/signup/index'
import { Route as SigninIndexRouteImport } from './routes/signin/index'
import { Route as SimulationsSimulationIdIndexRouteImport } from './routes/simulations/$simulationId/index'
import { Route as SimulationsSimulationIdReportsReportIdRouteImport } from './routes/simulations/$simulationId/reports/$reportId'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const SignupIndexRoute = SignupIndexRouteImport.update({
  id: '/signup/',
  path: '/signup/',
  getParentRoute: () => rootRouteImport,
} as any)
const SigninIndexRoute = SigninIndexRouteImport.update({
  id: '/signin/',
  path: '/signin/',
  getParentRoute: () => rootRouteImport,
} as any)
const SimulationsSimulationIdIndexRoute =
  SimulationsSimulationIdIndexRouteImport.update({
    id: '/simulations/$simulationId/',
    path: '/simulations/$simulationId/',
    getParentRoute: () => rootRouteImport,
  } as any)
const SimulationsSimulationIdReportsReportIdRoute =
  SimulationsSimulationIdReportsReportIdRouteImport.update({
    id: '/simulations/$simulationId/reports/$reportId',
    path: '/simulations/$simulationId/reports/$reportId',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/signin': typeof SigninIndexRoute
  '/signup': typeof SignupIndexRoute
  '/simulations/$simulationId': typeof SimulationsSimulationIdIndexRoute
  '/simulations/$simulationId/reports/$reportId': typeof SimulationsSimulationIdReportsReportIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/signin': typeof SigninIndexRoute
  '/signup': typeof SignupIndexRoute
  '/simulations/$simulationId': typeof SimulationsSimulationIdIndexRoute
  '/simulations/$simulationId/reports/$reportId': typeof SimulationsSimulationIdReportsReportIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/signin/': typeof SigninIndexRoute
  '/signup/': typeof SignupIndexRoute
  '/simulations/$simulationId/': typeof SimulationsSimulationIdIndexRoute
  '/simulations/$simulationId/reports/$reportId': typeof SimulationsSimulationIdReportsReportIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/signin'
    | '/signup'
    | '/simulations/$simulationId'
    | '/simulations/$simulationId/reports/$reportId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/signin'
    | '/signup'
    | '/simulations/$simulationId'
    | '/simulations/$simulationId/reports/$reportId'
  id:
    | '__root__'
    | '/'
    | '/signin/'
    | '/signup/'
    | '/simulations/$simulationId/'
    | '/simulations/$simulationId/reports/$reportId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SigninIndexRoute: typeof SigninIndexRoute
  SignupIndexRoute: typeof SignupIndexRoute
  SimulationsSimulationIdIndexRoute: typeof SimulationsSimulationIdIndexRoute
  SimulationsSimulationIdReportsReportIdRoute: typeof SimulationsSimulationIdReportsReportIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signup/': {
      id: '/signup/'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signin/': {
      id: '/signin/'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof SigninIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/simulations/$simulationId/': {
      id: '/simulations/$simulationId/'
      path: '/simulations/$simulationId'
      fullPath: '/simulations/$simulationId'
      preLoaderRoute: typeof SimulationsSimulationIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/simulations/$simulationId/reports/$reportId': {
      id: '/simulations/$simulationId/reports/$reportId'
      path: '/simulations/$simulationId/reports/$reportId'
      fullPath: '/simulations/$simulationId/reports/$reportId'
      preLoaderRoute: typeof SimulationsSimulationIdReportsReportIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SigninIndexRoute: SigninIndexRoute,
  SignupIndexRoute: SignupIndexRoute,
  SimulationsSimulationIdIndexRoute: SimulationsSimulationIdIndexRoute,
  SimulationsSimulationIdReportsReportIdRoute:
    SimulationsSimulationIdReportsReportIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
